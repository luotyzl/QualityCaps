@model PagedList.IPagedList<QualityCaps.Models.Order>
@using Microsoft.AspNet.Identity
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>


@{
    ViewBag.Title = "Index";
}

<h2>Orders Main</h2>

<div class="bs-docs-section">
    <div class="row">
        @using (Html.BeginForm("Index", "Items", FormMethod.Get))
        {
            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon">Find: </span>
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                    <span class="input-group-btn">
                        <input type="submit" class="btn btn-info btn-sm" value="Search" />
                    </span>
                </div>
            </div>
        }
    </div>
</div>


<table class="table table-striped table-hover">
    <tr>
        <th>
            Order Id
        </th>
        <th>
            First Name
        </th>
        <th>
            Last Name
        </th>
        <th>
            @Html.ActionLink("Order Total", "Index", new {sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            Email
        </th>
        <th>
            Status
        </th>
        <th></th>
    </tr>
    @{
        var matchingOrder = Model.Where(s => s.Username == User.Identity.GetUserName());
    }
    @foreach (var item in matchingOrder)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.OrderId })
            </td>

        </tr>
    }

</table>
<br/>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new {page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))